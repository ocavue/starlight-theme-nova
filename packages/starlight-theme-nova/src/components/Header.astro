---
const { hasSidebar } = Astro.locals.starlightRoute

import LanguageSelect from 'virtual:starlight/components/LanguageSelect'
import Search from 'virtual:starlight/components/Search'
import SiteTitle from 'virtual:starlight/components/SiteTitle'
import SocialIcons from 'virtual:starlight/components/SocialIcons'
import ThemeSelect from 'virtual:starlight/components/ThemeSelect'

import options from 'virtual:starlight-theme-nova/user-config'
import MobileMenuToggle from './MobileMenuToggle.astro'

const nav = options.nav ?? []

const { locale } = Astro.locals.starlightRoute

const getLocalizedLabel = (label: string | Record<string, string>) => {
  if (typeof label === 'string') {
    return label
  }

  if (typeof locale === 'string' && label[locale]) {
    return label[locale]
  }

  if (label['root']) {
    return label['root']
  }

  return Object.values(label)[0] ?? ''
}

const getLocalizedHref = (href: string | Record<string, string>) => {
  if (typeof href === 'string') {
    return href
  }

  if (typeof locale === 'string' && href[locale]) {
    return href[locale]
  }

  if (href['root']) {
    return href['root']
  }

  return Object.values(href)[0] ?? ''
}
---

<div class="nova-header">
  <div class="nova-header-title">
    <SiteTitle />
  </div>
  <nav class="nova-header-nav">
    {
      nav.map((item) => (
        <a class="nova-header-nav-link" href={getLocalizedHref(item.href)}>
          {getLocalizedLabel(item.label)}
        </a>
      ))
    }
  </nav>
  <div class="nova-header-search">
    <Search />
  </div>
  <div class="nova-header-actions-lg">
    <SocialIcons />
    <LanguageSelect />
    <ThemeSelect />
  </div>
  {
    hasSidebar && (
      <div class="nova-header-actions-sm">
        <MobileMenuToggle />
      </div>
    )
  }
</div>
